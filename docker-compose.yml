version: '3.8'

services:
  # Ana uygulama
  app:
    build:
      context: .
      target: production
    container_name: cicd-example-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - PORT=5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network

  # Development ortamÄ±
  app-dev:
    build:
      context: .
      target: development
    container_name: cicd-example-dev
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    volumes:
      - ./src:/app/src:ro
      - ./tests:/app/tests:ro
      - ./config:/app/config:ro
    networks:
      - app-network
    profiles:
      - dev

  # Test runner
  test:
    build:
      context: .
      target: testing
    container_name: cicd-example-test
    command: |
      sh -c "
        echo 'ðŸ§ª Testler Ã§alÄ±ÅŸÄ±yor...' &&
        python -m pytest tests/ -v --cov=src/ --cov-report=html &&
        echo 'âœ… Testler tamamlandÄ±!'
      "
    volumes:
      - ./test-reports:/app/test-reports
    networks:
      - app-network
    profiles:
      - test

  # Load balancer (Production simulation)
  nginx:
    image: nginx:alpine
    container_name: cicd-example-lb
    ports:
      - "80:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - production

  # Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: cicd-example-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - app-network
    profiles:
      - monitoring

networks:
  app-network:
    driver: bridge

volumes:
  test-reports: